library(tidyverse)
library(keras)
library(tensorflow)
library(reticulate)
library(jpeg)
library(png)
library(abind)
library(grid)

setwd("/Users/mohamedabuelreish")

apply_algorithm2 <- function(img_path) {
  img <- readPNG("NOISE.jpeg")
  img <- img[,,1:3]
  img[] <- runif(prod(dim(img)))
  alpha <- array(0.99, dim(img)[1:2]) 
  img <- abind(img, alpha/1, along = 3) 
  img <- rasterGrob(img, interpolate=TRUE)
  return(img)
}

model_list <- load_model_tf("./dandelion_model")
model <- model_list
target_size <- c(224, 224)

res <- data.frame(file = character(), class = character(), percent_dandelion = numeric(), percent_grass = numeric(), stringsAsFactors = FALSE)

folders <- c("grass")
for (folder in folders) {
  f <- list.files(paste0("./", folder))
  dir.create(paste0("./", folder, "_modified"), showWarnings = FALSE)
  for (i in f){
    img_path <- paste0("./", folder, "/", i)
    img_mod <- apply_algorithm2(img_path)
    png(paste0("./", folder, "_modified/", i), width = 224, height = 224)
    grid.draw(img_mod)
    dev.off()
    
    test_image <- image_load(paste0("./", folder, "_modified/", i),
                             target_size = target_size)
    x <- image_to_array(test_image)
    x <- array_reshape(x, c(1, dim(x)))
    x <- x/255
    pred <- model %>% predict(x)
    
    if (pred[1,2] < 0.50){
      res <- rbind(res, data.frame(file = i, class = "not_grass", percent_dandelion = pred[1,1], percent_grass = 1- pred[1,1]))
    } else {
      res <- rbind(res, data.frame(file = i, class = "grass", percent_dandelion = pred[1,1], percent_grass = 1 - pred[1,1]))
    }
  }
}

folders <- c("dandelions")
for (folder in folders) {
  f <- list.files(paste0("./", folder))
  dir.create(paste0("./", folder, "_modified"), showWarnings = FALSE)
  for (i in f){
    img_path <- paste0("./", folder, "/", i)
    img_mod <- apply_algorithm2(img_path)
    png(paste0("./", folder, "_modified/", i), width = 224, height = 224)
    grid.draw(img_mod)
    dev.off()
    
    test_image <- image_load(paste0("./", folder, "_modified/", i),
                             target_size = target_size)
    x <- image_to_array(test_image)
    x <- array_reshape(x, c(1, dim(x)))
    x <- x/255
    pred <- model %>% predict(x)
    
    if (pred[1,2] < 0.50){
      res <- rbind(res, data.frame(file = i, class = "Dandelion", percent_dandelion = pred[1,1], percent_grass = 1- pred[1,1]))
    } else {
      res <- rbind(res, data.frame(file = i, class = "Not Dandelion", percent_dandelion = pred[1,1], percent_grass = 1 - pred[1,1]))
    }
  }
}

print(res)
